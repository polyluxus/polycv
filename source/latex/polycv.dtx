% \iffalse meta-comment
%
% Copyright (C) 2020 by Martin C Schwarzer <polyluxus@gmail.com>
% ---------------------------------------------------------------------------
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Martin C Schwarzer.
%
% This work consists of the files polycv.dtx and polycv.ins
% and the derived filebase polycv.cls.
%
% The code is available at <https://github.com/polyluxus/polycv>.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{polycv.dtx}
%</driver>
%<class>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<class>\ProvidesClass{polycv}
%<*class>
    [2020/06/18 v1.0 Curriculum Vitae Class ]
%</class>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{libertine}
\usepackage[english]{babel}
\usepackage{csquotes}
\usepackage{setspace}
\usepackage[dvipsnames]{xcolor}
\definecolor{lightgray}{gray}{0.95}
\usepackage{listings}
\lstdefinestyle{mytex}{
  language=[LaTeX]TeX,%
  backgroundcolor=\color{lightgray},%
  basicstyle=\footnotesize\ttfamily,%
  keywordstyle=\bfseries,%
  breaklines=true,%
  morekeywords={part,chapter,subsection,subsubsection,paragraph,subparagraph}%
}
\lstset{style=mytex}
\usepackage{fontawesome}
\usepackage{hyperref}
\newcommand\mybackslash{\char`\\}
\usepackage{dtxdescribe}

\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{polycv.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v1.0}{2020/06/18}{Initial version}
%
% \GetFileInfo{polycv.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment}
% \DoNotIndex{\#,\$,\%,\&,\@,\\,\{,\},\^,\_,\~,\ }
% \DoNotIndex{\@ne}
% \DoNotIndex{\advance,\begingroup,\catcode,\closein}
% \DoNotIndex{\closeout,\day,\def,\edef,\else,\empty,\endgroup}
%
% \providecommand*{\url}{\texttt}
% \title{The \textsf{polycv} class}
% \author{Martin C Schwarzer \\ \url{polyluxus@gmail.com}}
% \date{\fileversion~from \filedate}
%
% \maketitle
%
% \begin{abstract}
%   A \LaTeX class for writing curriculum vitaes.
% \end{abstract}
%
% \tableofcontents
% \clearpage
%
% \section{Introduction}
%
% I previously used the package
% \href{https://ctan.org/pkg/koma-moderncvclassic}{koma-moderncvclassic}
% to prepare my CV, and I was actually quite satisfied with the look of
% it. In a way this class borrows some design elements from it. However, I
% noticed it was not using a lot of space, which got especially
% problematic when inserting a picture.
% 
% I looked through various templates and classes online (%
% \href{https://github.com/opieters/limecv}{limecv},
% \href{https://github.com/latex-ninja/simple-academic-resume}{simple academic resume},
% \href{https://github.com/deedy/Deedy-Resume}{DeedyResume},
% \href{https://www.sharelatex.com/templates/cv-or-resume/fancy-cv}{FancyCV by Adrien Friggeri},
% \href{https://www.overleaf.com/gallery/tagged/cv}{the Overleaf CVGallery}, 
% TeX Stack Exchange \href{https://tex.stackexchange.com/q/80/33413}{%
%   LaTeX template for resume/curriculum vitae}, \ldots{} , there are possibly some I forgot),
% but couldn't find anything that was exactly to my linking. So I decided
% to write a class for myself, not just only for my CV, but also for the
% training in writing such classes (or packages).
% 
% The main goal was to structure the information in a way that, if
% condensed enough, it would fit on one page; but additional pages could
% be added when the need arose, e.g.~a long publication list, or many
% stations along the way.
% 
% Additionally I liked the idea of having a cover letter template, which
% resembles most of the elements of the CV.
% 
% The source code is available at \href{https://github.com/polyluxus/polycv}{\faGithub~GitHub},
% where there are also a few example uses of this class.
% If anything is unclear, needs improvement, is missing please submit an issue there
% (\href{https://github.com/polyluxus/polycv/issues}{GitHub issues}). Thank you.
%
% \subsubsection{Contributing}
%
% If you find this class useful and would like to contribute, you can submit a pull request to
% the development branch of the \href{https://github.com/polyluxus/polycv}{\faGithub~GitHub repository}.
% Please note that the they will be squashed into one commit before mergeing them into the main 
% branch of the repository.
% 
% \section{Installation}
% 
% This work consists of the files \texttt{polycv.dtx} and \texttt{polycv.ins}
% and the derived filebase \texttt{polycv.cls}, which should be copied to a location
% where latex will look for it.
%
% The source code is hosted at \href{https://github.com/polyluxus/polycv}{\faGithub~GitHub},
% where there are also the derived class and documentation files available.
% 
% \subsection{Prerequisites}
% In order for this class to function properly, the following packages must be installed:
% \begin{itemize}
%   \item The package \lstinline`etoolbox` provides additional hooks necessary for
%     the setup within the source class.
%   \item The \lstinline`calc` package allows to derive some lengths from others.
%   \item The \lstinline`hyperref` package provides clickable cross-references,
%     e.g. to references to the bibliography, or websites.
%   \item Colorsupport comesss from \lstinline`xcolor`.
%   \item Most off the graphical elements within this class are produced with \lstinline`tikz`,
%     such as the header and footer boxes, and the progressbar.
%   \item To include a signature and profile pictures, \lstinline`graphicx` is lloaded.
%   \item For most of the document the indentation is disabled with the \lstinline`parskip` package.
%   \item The page layout is produced with the \lstinline`geometry` package.
%   \item The \lstinline`fontawesome` is needed for icons, e.g. \faGithub, in the side bar.
%   \item To include other reference letters as pdfs, \lstinline`pdfpages` is also loaded.
% \end{itemize}
%
% \section{Usage}
%
% \subsection{Class Options}
% This class is build on top of the standard article class. 
% It therefore inherits most options from that class. 
% Some are incompatible with the design of this class and have been disabled.
% Other options allow for customisation of the used templates.
% In this section they will be briefly described, along with commands that can be 
% used to set the values in the preamble.
% 
% \subsubsection{Page Layout}
%
% The general page layout will be accomplished by the \texttt{geopetry} package. 
% Depending on the environment currently in use, a few internal lengths are defined and used.
% Most of these can only be set via the class options, or within the preamble.
% 
% \DescribeOption{margins}
% \DescribeDefault{1.0 cm}
% The length of \texttt{margin} is the baselength of most surrounding space. 
% It is used additionally to the header and footer lengths.
% This setting also controls the space between the side bar and the main body on the first page 
% of the CV environment.
% \DescribeMacro{\setpolycvmargins} 
% The command \cs{setpolycvmargins}\marg{length} is only available in the preable and can 
% be used to set the margin length after loading the class.
% 
% \DescribeOption{headerheight}
% \DescribeDefault{3.0cm}
% \DescribeOption{footerheight}
% \DescribeDefault{0.5cm}
% The options \texttt{headerheight} and \texttt{footerheight} control the height of the
% boxes for the header and the footer, respectively.
% These lengths affect the whole document and can therfore only be set when loading the
% class or within the preamble.
% The will be the same for each of the environments used.
% \DescribeMacro{\setpolycvheaderheight}
% \DescribeMacro{\setpolycvfooterheight}
% Instead of choosing the key/value option at loadtime, the commands
% \cs{setpolycvheaderheight}\marg{length} and 
% \cs{setpolycvfooterheight}\marg{length} can be issued to manipulate these values.
%
% \DescribeOption{sidebarwidth}
% \DescribeDefault{5.0cm}
% On the left side of first page of the CV a box is created, the side bar, which may hold 
% personal information, a picture, skills, languages, hobbies, etc..
% The width of this box is controlled with the option \texttt{sidebarwidth}.
% This must be defined before the sidebar is attempted to be set.
% \watchout
% \DescribeMacro{\setpolycvsidebarwidth}
% There is currently no command analogous to the other lengths to set this in the preable,
% it must be defined via the options.
% 
% \DescribeOption{iconspace}
% \DescribeDefault{0.8cm}
% Closely related is the option \texttt{iconspace}, which defines the width that is reserved
% for the icon in a line in the side bar environment.
% \DescribeMacro{\setpolycviconspace}
% It can also be set via \cs{setpolycviconspace}\marg{length} in the preamble.
%
% \DescribeOption{hintcol}
% \DescribeDefault{2.7cm}
% \DescribeOption{hintcolsep}
% \DescribeDefault{0.2cm}
% In the main body, each entry will consist of two parts: 
% First, a small column for a keyword, date, bar, which is called hint in this documentation.
% The width of this column can be adjusted with the option \texttt{hintcol}.
% Second, a column for the description of this hint. This is just a parbox, and depends on the 
% command used. The width will be automaticall calculated from the available space.
% These two columns are separated by a space.
% The width of which can be set via the option \texttt{hintcolsep}.
% \DescribeMacro{\setpolycvhintcolumnwidth}
% \DescribeMacro{\setpolycvhintcolumnsep}
% Alternatively they can be set in the preamble via \cs{setpolycvhintcolumnwidth}\marg{length} and
% via \cs{setpolycvhintcolumnsep}\marg{length}, respectively.
%
% \DescribeOption{letterindent} 
% \DescribeDefault{1em}
% In the letter environment the indentation of the first line of a paragraph can be adjusted
% with the \texttt{letterindent} option.
% This is another length that can (currently) only be controlled with passing the option to the class.
% 
% \subsubsection{Colors}
% \DescribeOption{xcolor}\DescribeDefault{dvipsnames}
% The class loads the \texttt{xcolor} package and passes by default the option \texttt{dvipsnames} to it.
% This can be changed by using the \texttt{xcolor} option to pass other parameters to this package.
% It is loaded internally before the \texttt{tikz} package to avoid option conflicts.
% 
% \DescribeOption{primary}\DescribeDefault{blue}
% The main colour of the CV is called \texttt{primary} and can be set via this option.
% It is used for all parts that will be highlighted, such as the header bar and the section headings.
% \DescribeOption{shade} \DescribeDefault{black}
% \DescribeOption{mixing} \DescribeDefault{10}
% The textcolor is a composit color from the primary color and the \texttt{shade} color. 
% By default this is defined as black, so the text will appear darker.
% The amount of primary color mixed in depends on the a factor which can be set via the \texttt{mixing} option.
% 
% \DescribeOption{secondary} \DescribeDefault{white}
% The \texttt{secondary} color specifies the background color and is white by default.
%
% \margintag{unused}
% \DescribeOption{highlight} \DescribeDefault{orange} 
% One last color is defined to highlight items. 
% It can be set via the \texttt{highlight} option.
% This option currently has little effect as the color itself is not used within the template.
% 
% \DescribeMacro{\setpolycvprimary}
% \DescribeMacro{\setpolycvsecondary}
% \DescribeMacro{\setpolycvhighlight}
% \DescribeMacro{\setpolycvshade}
% To allow for custom colors to be specified, all colors ca also be specified via 
% \cs{setpolycv...}\marg{color} commands.
% Note that the mixing parameter must be set via the options and jhas no special macro.
%
% \subsubsection{Progress and Level Bar Options}
% 
% \DescribeOption{progressbarheight}
% \DescribeDefault{1.5 ex}
% Skills can be displayd as an CV entry and accompanied with a progress bar or a
% level (bar) indicator. The width of this bar is by default either determined by the
% environment in which it is used, or the width of the hint column.
% The height of the bar can be controlled with the \texttt{progressbarheight} option.
% \DescribeOption{progressbarunits}
% \DescribeDefault{5}
% The level bar is devided into boxes or cicles. The number of these items can be set
% via \texttt{progressbarunits} and defaults to five.
% 
% \subsubsection{Miscellaneous Options}
% \DescribeOption{draft, final}
% The class also extends the \texttt{draft} option of the standard article class.
% The otherwise invisible boxes, e.g. for the side bar, will be lightly shaded, so that they are visible.
% The complementary option is \texttt{final}. 
% Note that if the final option is found, the draft option will have no effect and will be ignored.
% 
% \DescribeOption{biblatex} 
% The \texttt{biblatex} option will inject some code into a bibliography environemnt, so that the alingment
% of the hint column will be better. It is turned off by default.
% If the biblatex package is not loaded (this class will not take care of this), it might lead to problems.
% 
% \DescribeOption{signcv} 
% In some countries it is customary to sign the CV.
% The option \texttt{signcv} can be used to enable this behavior.
% If it is enabled, a box with a signature will be placed in the lower left corner of the first page,
% below the sidebar contents. The box width is also controlled with the sidebar width option.
% An image with the signature is necessary (see below).
%
% \subsubsection{Void Article Options}
% \DescribeOption{twocolumn}
% \watchout
% Since every page has a specific layout passing the \texttt{twocolumn} option to the inherited
% article class will lead to problems. Therefore it has been disabled. 
%
% \DescribeOption{titlepage}
%\watchout
% For the same reason as above, creating a title page doesn't make sense and will clash with other
% settings of this class. Therefore the \texttt{titlepage} option has also been disabled.
% 
% \subsection{The CV Environments}
% 
% \subsection{The Cover Letter Environment}
% 
% \subsection{Including external \PDF as Appendix}
% Put text here.
%
%
%
%
%
%
%
%
%
%
% \DescribeMacro{\setpolycvprogressbarheight}
%
%
% \DescribeMacro{\setpolycvheaderfont}
%
%
% \DescribeMacro{\setpolycvheaderfont}
%
%
% \DescribeMacro{\setpolycventryraggedright}
%
%
% \DescribeMacro{\setpolycventryjustify}
%
%
% \DescribeMacro{\setpolycvsignatureright}
%
%
% \DescribeMacro{\setpolycvsignatureleft}
%
%
% \DescribeMacro{\setpolycvprogressbarunits}
%
%
% \DescribeMacro{\polycvauthor}
%
%
% \DescribeMacro{\polycvauthor}
%
%
% \DescribeMacro{\polycvtitle}
%
%
% \DescribeMacro{\polycvtitle}
%
%
% \DescribeMacro{\polycvposition}
%
%
% \DescribeMacro{\position}
%
%
% \DescribeMacro{\position}
%
%
% \DescribeMacro{\polycvitemline}
%
%
% \DescribeMacro{\polycvaddress}
%
%
% \DescribeMacro{\polycvstreet}
%
%
% \DescribeMacro{\polycvlocation}
%
%
% \DescribeMacro{\address}
%
%
% \DescribeMacro{\street}
%
%
% \DescribeMacro{\location}
%
%
% \DescribeMacro{\address}
%
%
% \DescribeMacro{\street}
%
%
% \DescribeMacro{\location}
%
%
% \DescribeMacro{\polycvaddress}
%
%
% \DescribeMacro{\polycvlineaddress}
%
%
% \DescribeMacro{\polycvemail}
%
%
% \DescribeMacro{\email}
%
%
% \DescribeMacro{\email}
%
%
% \DescribeMacro{\polycvlineemail}
%
%
% \DescribeMacro{\polycvphone}
%
%
% \DescribeMacro{\phone}
%
%
% \DescribeMacro{\phone}
%
%
% \DescribeMacro{\polycvlinephone}
%
%
% \DescribeMacro{\polycvmobile}
%
%
% \DescribeMacro{\mobile}
%
%
% \DescribeMacro{\mobile}
%
%
% \DescribeMacro{\polycvlinemobile}
%
%
% \DescribeMacro{\polycvgithub}
%
%
% \DescribeMacro{\github}
%
%
% \DescribeMacro{\github}
%
%
% \DescribeMacro{\polycvlinegithub}
%
%
% \DescribeMacro{\polycvorcidicon}
%
%
% \DescribeMacro{\polycvorcid}
%
%
% \DescribeMacro{\orcid}
%
%
% \DescribeMacro{\orcid}
%
%
% \DescribeMacro{\polycvlineorcid}
%
%
% \DescribeMacro{\polycvsignatureimage}
%
%
% \DescribeMacro{\signatureimage}
%
%
% \DescribeMacro{\signatureimage}
%
%
% \DescribeMacro{\section}
%
%
% \DescribeMacro{\subsection}
%
%
% \DescribeMacro{\polycvlevelssquared}
%
%
% \DescribeMacro{\polycvlevelscircled}
%
%
% \DescribeMacro{\polycvprogressbar}
%
%
% \DescribeEnv{polycvsidebar}
%
%
% \DescribeMacro{\polycvline}
%
%
% \DescribeMacro{\polycvline}
%
%
% \DescribeMacro{\polycventry}
%
%
% \DescribeMacro{\polycventry}
%
%
% \DescribeMacro{\polycvskill}
%
%
% \DescribeMacro{\polycvlanguage}
%
%
% \DescribeEnv{polycvfirstpage}
%
%
% \DescribeEnv{polycvpage}
%
%
% \DescribeMacro{\opening}
%
%
% \DescribeMacro{\opening}
%
%
% \DescribeMacro{\closing}
%
%
% \DescribeMacro{\closing}
%
%
% \DescribeMacro{\setpsmark}
%
%
% \DescribeMacro{\setpsmark}
%
%
% \DescribeMacro{\ps}
%
%
% \DescribeMacro{\ps}
%
%
% \DescribeEnv{polycvletter}
%
%
% \DescribeMacro{\polycvappendix}
%
%
% \DescribeMacro{\polycvappendix}
%
%
%
% \StopEventually{}
%
% \clearpage
% \interfootnotelinepenalty=10000
% \section{Implementation}
%
% \subsection{Option definitions}
%
% These simple definitions for key-value pairs as class options are done with kvoptions as
% described in TUGBoat.\footnote{J. Wright, C. Feuersänger, TUGBoat, Vol. 30 (2009), No. 1, p. 110-122.}
% Using the prefix \lstinline`polycv@` as an inbetween to distinguish values set from class options
% in the document.
%
%    \begin{macrocode}
\RequirePackage{kvoptions}
\SetupKeyvalOptions{
  family=polycv,
  prefix=polycv@
}
%    \end{macrocode}
%
% Define options and preset margins for the page setup via the geometry package.
%
%    \begin{macrocode}
\DeclareStringOption[1.0cm]{margins}
\DeclareStringOption[3.0cm]{headerheight}
\DeclareStringOption[0.5cm]{footerheight}
\DeclareStringOption[5.0cm]{sidebarwidth}
\DeclareStringOption[2.7cm]{hintcol}
\DeclareStringOption[0.2cm]{hintcolsep}
\DeclareStringOption[0.8cm]{iconspace}
\DeclareStringOption[1.5ex]{progressbarheight}
%    \end{macrocode}
%
% The progressbar, which contains of individual items, can be customised to include a certain
% number of elements. Define the option for this number and set it to five as default.
%
%    \begin{macrocode}
\DeclareStringOption[5]{progressbarunits}
%    \end{macrocode}
%
% Define the options for the colors which should be used throughout the document.
% The mixing option is used together with the shading color, to modify the primary color.
%
%    \begin{macrocode}
\DeclareStringOption[blue]{primary}
\DeclareStringOption[white]{secondary}
\DeclareStringOption[orange]{highlight}
\DeclareStringOption[black]{shade}
\DeclareStringOption[10]{mixing}
%    \end{macrocode}
% 
% Define an option for a draft mode, analogous to the standard classes. This will be extended, see below.
% 
%    \begin{macrocode}
\DeclareBoolOption{draft}
\DeclareComplementaryOption{final}{draft}
%    \end{macrocode}
% 
% Define a biblatex mode, which will adjust some space settings in the bibliography, if desired.
%
%    \begin{macrocode}
\DeclareBoolOption{biblatex}
%    \end{macrocode}
%
% Define an option that lets the user pass settings to xcolor, i.e. (the default) \lstinline`dvipsnames`.
%
%    \begin{macrocode}
\DeclareStringOption[dvipsnames]{xcolor}
%    \end{macrocode}
% 
% Define the option whether the CV (front page) is signed or not.
%
%    \begin{macrocode}
\DeclareBoolOption{signcv}
%    \end{macrocode}
%
% Define an option to set the indentation in the letter and let it default to the width or one m.
%
%    \begin{macrocode}
\DeclareStringOption[1em]{letterindent}
%    \end{macrocode}
%
% Warn about options which will not and cannot be used or passed on, because of potential clashes for thiss class.
%
%    \begin{macrocode}
\DeclareVoidOption{twocolumn}{%
  \ClassError{polycv}{Incompatible because of special page setup.}}
\DeclareVoidOption{titlepage}{%
  \ClassWarning{polycv}{Incompatible with a title page.}}
%    \end{macrocode}
%
% Pass all other options to the satndart article class.
%
%    \begin{macrocode}
\DeclareDefaultOption{%
  \PassOptionsToClass{\CurrentOptionKey}{article}}
%    \end{macrocode}
%
% Finally, process these options and load the standard class.
%   
%    \begin{macrocode}
\ProcessKeyvalOptions{polycv}
\LoadClass{article}
%    \end{macrocode}
%
% \subsection{Necessary packages}
%
% Some packages are essential for this class and need to be loaded.
%
% \begin{itemize}
%   \item \texttt{etoolbox} is necessary for additional hooks like \lstinline`\AtEndPreamble`.
%   \item \texttt{calc} is necessary to do mathematics with lengths
%   \item \texttt{hyperref} provides hyperlinks within the CV and letter
%   \item \texttt{xcolor} provides convenient color definitions, since hyperref is loaded, this option is set by default.
%     Other options can be added with the class options switch.
%     This package must be loaded before tikz, otherwise there will be an option clash.
%   \item \texttt{tikz} is used for headerbox, symbols, etc.. (must be loaded after xcolor)
%   \item \texttt{graphicx} is used for the inclusion of graphics, e.g. signature and profile picture.
%   \item \texttt{parskip} turns of indentation and improves spacing
%   \item \texttt{geometry} is used for the page layout
%   \item \texttt{fontawesome} provides fancy symbols for the sidebar
%   \item \texttt{pdfpages} are used to include a pdf in the  appendix
% \end{itemize}
%    \begin{macrocode}
\RequirePackage{etoolbox}
\RequirePackage{calc}
\RequirePackage{hyperref}
\PassOptionsToPackage{\polycv@xcolor,hyperref}{xcolor}
\RequirePackage{xcolor}
\RequirePackage{tikz}
\RequirePackage{graphicx}
\RequirePackage[indent=0pt]{parskip}
\RequirePackage{geometry}
\RequirePackage{fontawesome}
\RequirePackage{pdfpages}
%    \end{macrocode}
%
% \subsection{Global settings}
%
% Set the page style to remove pagenumbers.
%
%    \begin{macrocode}
\pagestyle{empty}
%    \end{macrocode}
%
% \subsubsection{Colors}
%
% Apart from the switches as options, define some commands that can be used to set the colors for the document.
%
% \begin{macro}{\setpolycvprimary}
% The primary color used for headers.
%    \begin{macrocode}
\newcommand*{\setpolycvprimary}[1]{\renewcommand*{\polycv@primary}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvsecondary}
% The secondary color is the background color, i.e. the page color.
%    \begin{macrocode}
\newcommand*{\setpolycvsecondary}[1]{\renewcommand*{\polycv@secondary}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvhighlight}
% If text should be highlighted another color can be set.
%    \begin{macrocode}
\newcommand*{\setpolycvhighlight}[1]{\renewcommand*{\polycv@highlight}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvshade}
% The color which is used for shading (damping) the primary color.
%    \begin{macrocode}
\newcommand*{\setpolycvshade}[1]{\renewcommand*{\polycv@shade}{#1}}
%    \end{macrocode}
% \end{macro}
%
% Disable these changing color commands for body, then define the colors in internal
% macros along with some mixing.
% Then set the text color and the color for the page for the entire document.
%
%    \begin{macrocode}
\@onlypreamble\setpolycvprimary
\@onlypreamble\setpolycvsecondary
\@onlypreamble\setpolycvhighlight
\@onlypreamble\setpolycvshade
\AtEndPreamble{%
  \colorlet{polycvpagecolor}{\polycv@secondary}
  \colorlet{polycvheaderbackground}{\polycv@primary}
  \colorlet{polycvheadertext}{\polycv@secondary}
  \colorlet{polycvsectioncolor}{\polycv@primary}
  \colorlet{polycvtextcolor}{\polycv@primary!\polycv@mixing!\polycv@shade}
  \colorlet{polycvhighlight}{\polycv@highlight}
  \colorlet{polycvsidebarbackground}{\polycv@secondary}
  \colorlet{polycvprogressbarfilled}{\polycv@primary}
  \colorlet{polycvprogressbarempty}{\polycv@primary!10!\polycv@secondary}
}
\AfterPreamble{\color{polycvtextcolor}\pagecolor{polycvpagecolor}}
%    \end{macrocode}
%
% \subsubsection{Extending draft mode}
% This section emulates and extends the draft mode.
% It writes an information message to the log.
% It then sets the overfull boxes identifier.\footnote{%
% \textit{How to test whether report has been called with “draft” option}%
% \url{https://tex.stackexchange.com/a/240128/33413}}
% Passes the \lstinline`showframe` option to the geometry package to make the page borders visible.
% It also sets the color of the side bar, to make the tikz boxes visible in draft mode.
%    \begin{macrocode}
\ifpolycv@draft%
  \ClassInfo{polycv}{Option 'draft' is enabled}
  \setlength\overfullrule{1em}
  \PassOptionsToPackage{showframe}{geometry}
  \AtEndPreamble{%
    \colorlet{polycvsidebarbackground}{\polycv@primary!20!\polycv@secondary}%
  }
\fi
%    \end{macrocode}
% \subsubsection{Biblatex Mode}
% In this option the biblatex package is set to use the same width as the date column for the numeration.
%    \begin{macrocode}
\ifpolycv@biblatex%
  \ClassInfo{polycv}{Option 'biblatex' is enabled}
  \AtEndPreamble{%
    \setlength{\biblabelsep}{\polycvhintcolsep}%
    \DeclareFieldFormat{labelnumberwidth}{\makebox[\polycvhintcol][r]{[#1]}}%
  }%
\fi
%    \end{macrocode}
%
% \subsubsection{Lengths}
%
% Define the lengths and use defaults or parameters from the class options for the layout.
%
%    \begin{macrocode}
\newlength{\polycvheaderheight}
\setlength{\polycvheaderheight}{\polycv@headerheight}
\newlength{\polycvfooterheight}
\setlength{\polycvfooterheight}{\polycv@footerheight}
\newlength{\polycvmargins}
\setlength{\polycvmargins}{\polycv@margins}
\newlength{\polycvsidebarwidth}
\setlength{\polycvsidebarwidth}{\polycv@sidebarwidth}
\newlength{\polycvhintcol}
\setlength{\polycvhintcol}{\polycv@hintcol}
\newlength{\polycvhintcolsep}
\setlength{\polycvhintcolsep}{\polycv@hintcolsep}
\newlength{\polycviconspace}
\setlength{\polycviconspace}{\polycv@iconspace}
\newlength{\polycvprogressbarheight}
\setlength{\polycvprogressbarheight}{\polycv@progressbarheight}
\newlength{\polycvletterindent}
\setlength{\polycvletterindent}{\polycv@letterindent}
%    \end{macrocode}
%
% The lengths can also be altered with the following commands.
% \begin{macro}{\setpolycvheaderheight}
% Define the hight for the header box.
%    \begin{macrocode}
\newcommand*{\setpolycvheaderheight}[1]{\setlength{\polycvheaderheight}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvfooterheight}
% Define the height for the footer box.
%    \begin{macrocode}
\newcommand*{\setpolycvfooterheight}[1]{\setlength{\polycvfooterheight}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvmargins}
% Define the width of the margins.
%    \begin{macrocode}
\newcommand*{\setpolycvmargins}[1]{\setlength{\polycvmargins}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvhintcolumnwidth}
% Define the hint column width (where dates and level, etc. are set).
%    \begin{macrocode}
\newcommand*{\setpolycvhintcolumnwidth}[1]{\setlength{\polycvhintcol}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvhintcolumnsep}
% Define the space between the hint column and the description column.
%    \begin{macrocode}
\newcommand*{\setpolycvhintcolumnsep}[1]{\setlength{\polycvhintcolsep}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycviconspace}
% Define the space reserved for the items in the sidebar box.
%    \begin{macrocode}
\newcommand*{\setpolycviconspace}[1]{\setlength{\polycviconspace}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpolycvprogressbarheight}
% Define the standard height of the progress bar. This will also apply to the levels bar.
%    \begin{macrocode}
\newcommand*{\setpolycvprogressbarheight}[1]{\setlength{\polycvprogressbarheight}{#1}}
%    \end{macrocode}
% \end{macro}
%
% These commands need to be disabled for the body, 
% so that automatically derived lengths will still be useable.
%    \begin{macrocode}
\@onlypreamble\setpolycvheaderheight
\@onlypreamble\setpolycvfooterheight
\@onlypreamble\setpolycvmargins
\@onlypreamble\setpolycvhintcolumnwidth
\@onlypreamble\setpolycvhintcolumnsep
\@onlypreamble\setpolycviconspace
\@onlypreamble\setpolycvprogressbarheight
%    \end{macrocode}
% 
% Additional lengths, which are derived from the above,
% will be set at the end of the preamble.
%
%    \begin{macrocode}
\newlength{\polycvleftmargin}
\newlength{\polycvtopmargin}
\newlength{\polycvbottommargin}
\AtEndPreamble{%
  \setlength{\polycvleftmargin}{\polycvsidebarwidth+2\polycvmargins}
  \setlength{\polycvtopmargin}{\polycvheaderheight+\polycvmargins}
  \setlength{\polycvbottommargin}{\polycvfooterheight+\polycvmargins}
}
%    \end{macrocode}
%
% \subsubsection{Fonts and Styles}
%
% \begin{macro}{\polycv@headerfont}
% \begin{macro}{\setpolycvheaderfont}
% Define the font family for the header and make it bold (by default) and store
% it in a variable. Provide access to this cariable via a set command.
%    \begin{macrocode}
\providecommand\polycv@headerfont{}
\renewcommand{\polycv@headerfont}{\sffamily\bfseries}
\providecommand\setpolycvheaderfont{}
\renewcommand*{\setpolycvheaderfont}[1]{\renewcommand*{\polycv@headerfont}{#1}}
\@onlypreamble\setpolycvheaderfont
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycv@entry@ragged}
% \begin{macro}{\setpolycventryraggedright}
% \begin{macro}{\setpolycventryjustify}
% Provide a variable to store how the output is set, i.e. the standard raggedness.
% Provide commands to change the raggedness of the output. 
% These need to be set in the preamble, so they are disabled for the body.
%    \begin{macrocode}
\providecommand\polycv@entry@ragged{}
\newcommand*{\setpolycventryraggedright}{\renewcommand{\polycv@entry@ragged}{\raggedright}}
\newcommand*{\setpolycventryjustify}{\renewcommand{\polycv@entry@ragged}{}}
\@onlypreamble\setpolycventryraggedright
\@onlypreamble\setpolycventryjustify
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycv@signature@alignment}
% \begin{macro}{\setpolycvsignatureright}
% \begin{macro}{\setpolycvsignatureleft}
% Define the alignment for the signature, which is stored in a variable.
%  Provide commands to change it, and disable them for the body.
%    \begin{macrocode}
\providecommand\polycv@signature@alignment{right}
\newcommand*{\setpolycvsignatureright}{\renewcommand{\polycv@signature@alignment}{right}}
\newcommand*{\setpolycvsignatureleft}{\renewcommand{\polycv@signature@alignment}{left}}
\@onlypreamble\setpolycvsignatureright
\@onlypreamble\setpolycvsignatureright
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Macros and Environments}
%
% Define special commands and environment.s
%
% \begin{macro}{\setpolycvprogressbarunits}
% Control the number of items for the levels bar.
%    \begin{macrocode}
\newcommand*{\setpolycvprogressbarunits}[1]{\renewcommand*{\polycv@progressbarunits}{#1}}
\@onlypreamble\setpolycvprogressbarunits
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Personal Information}
%
% This section defines the variables, which will store the personal information.
% These are used in the template lines of the sidebar.
%
% \begin{macro}{\polycvauthor}
% \begin{macro}{\polycvtitle}
% The author and title commands already exist, so they only need to be stored.
%    \begin{macrocode}
\providecommand*\polycvauthor{}
\renewcommand{\polycvauthor}{\@author}
\providecommand\polycvtitle{}
\renewcommand{\polycvtitle}{\@title}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvposition}
% \begin{macro}{\position}
% Store the position, which is used as the sub-heading in the title banner.
% Disable this command because it is needed before the header is set.
%    \begin{macrocode}
\providecommand*\polycvposition{}
\providecommand*\position{}
\renewcommand{\position}[1]{\renewcommand{\polycvposition}{#1}}
\@onlypreamble\position
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvitemline}
% This defines a generic line consisting of tow parboxes.
% This command is needed for the sidebar.
% The left parbox is used as a hint column and contains an icon,
% the right the value of a variable.
%    \begin{macrocode}
\providecommand\polycvitemline[3][\polycviconspace]{%
  \parbox[t]{#1}{\centering#2}%
  \parbox[t]{\linewidth-#1}{#3}\par\vspace{0.3\baselineskip}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycvaddress}
% \begin{macro}{\polycvstreet}
% \begin{macro}{\polycvlocation}
% Variables to store an address.  
%    \begin{macrocode}
\providecommand\polycvaddress{}
\providecommand\polycvstreet{}
\providecommand\polycvlocation{}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\address}
% \begin{macro}{\street}
% \begin{macro}{\location}
% Commands to set the values used for the address
%    \begin{macrocode}
\providecommand\address{}
\providecommand\street{}
\providecommand\location{}
\renewcommand{\address}[1]{\renewcommand{\polycvaddress}{#1}}
\renewcommand{\street}[1]{\renewcommand{\polycvstreet}{#1}}
\renewcommand{\location}[1]{\renewcommand{\polycvlocation}{#1}}
%    \end{macrocode}
% Build the address for street and location.
%    \begin{macrocode}
\renewcommand{\polycvaddress}{\polycvstreet\\\polycvlocation}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvlineaddress}
% Template to produce the address for the sidebar.
%    \begin{macrocode}
\providecommand{\polycvlineaddress}{\polycvitemline{\faMapMarker}{\polycvaddress}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycvemail}
% \begin{macro}{\email}
% \begin{macro}{\polycvlineemail}
% Store and set email, template for the sidebar.
%    \begin{macrocode}
\providecommand*\polycvemail{}
\providecommand*\email{}
\renewcommand{\email}[1]{\renewcommand{\polycvemail}{\href{mailto:#1}{#1}}}
\providecommand{\polycvlineemail}{\polycvitemline{\faEnvelope}{\polycvemail}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvphone}
% \begin{macro}{\phone}
% \begin{macro}{\polycvlinephone}
% Store and set phone number, template for the sidebar.
%    \begin{macrocode}
\providecommand*\polycvphone{}
\providecommand*\phone{}
\renewcommand{\phone}[1]{\renewcommand{\polycvphone}{#1}}
\providecommand{\polycvlinephone}{\polycvitemline{\faPhone}{\polycvphone}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvmobile}
% \begin{macro}{\mobile}
% \begin{macro}{\polycvlinemobile}
% Store and set mobile number, template for the sidebar.
%    \begin{macrocode}
\providecommand*\polycvmobile{}
\providecommand*\mobile{}
\renewcommand{\mobile}[1]{\renewcommand{\polycvmobile}{#1}}
\providecommand{\polycvlinemobile}{\polycvitemline{\faMobile}{\polycvmobile}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvgithub}
% \begin{macro}{\github}
% \begin{macro}{\polycvlinegithub}
% Store and set username for GitHub, template for the sidebar.
%    \begin{macrocode}
\providecommand*\polycvgithub{}
\providecommand*\github{}
\renewcommand{\github}[1]{\renewcommand{\polycvgithub}{\href{https://github.com/#1}{github.com/#1}}}
\providecommand{\polycvlinegithub}{\polycvitemline{\faGithub}{\polycvgithub}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvorcidicon}
% This defines the orcid icon either from the file \lstinline`orcidicon.pdf` if it is found by \LaTeX.
% I am unaware of a \LaTeX package that defines this symbol.\footnote{%
% For more details see:  
% \textit{Is there a standard way to include ORCID in TeX / PDF?}
% (\url{https://tex.stackexchange.com/q/275578/33413})}
% If such a file is  not found, it will place as small square of bold letters spelling orcid.
%    \begin{macrocode}
\providecommand*\polycvorcidicon{}
\IfFileExists{orcidicon.pdf}{%
  \renewcommand{\polycvorcidicon}{%
    \raisebox{-0.2em}{\includegraphics[height=1.0em]{orcidicon}}%
  }%
}{%
  \renewcommand{\polycvorcidicon}{%
    \raisebox{-0.2em}{\resizebox{1em}{1em}{\textbf{ORCID}}}%
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycvorcid}
% \begin{macro}{\orcid}
% \begin{macro}{\polycvlineorcid}
% Store and set the orcid number, template for the sidebar.
%    \begin{macrocode}
\providecommand*\polycvorcid{}
\providecommand*\orcid{}
\renewcommand{\orcid}[1]{\renewcommand{\polycvorcid}{\href{http://orcid.org/#1}{orcid.org/#1}}}
\providecommand{\polycvlineorcid}{\polycvitemline{\polycvorcidicon}{\polycvorcid}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvsignatureimage}
% \begin{macro}{\signatureimage}
% Store the filename of an image used to produce the signature.
%    \begin{macrocode}
\providecommand\polycvsignatureimage{}
\providecommand\signatureimage{}
\renewcommand{\signatureimage}[1]{\renewcommand{\polycvsignatureimage}{#1}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsubsection{Redefinition of Section Headers}
%
% \begin{macro}{\section}
% \begin{macro}{\subsection}
% The section and sub-section commands are redefined to have no numbers.
% Instead there will be a bar the length of the hint column, and they will use the primary color.
%
%    \begin{macrocode}
\renewcommand{\section}[1]{%
  \parbox[b]{1\linewidth}{%
    \color{polycvsectioncolor}%
    \Large%
    \rule{\polycvhintcol}{1ex}\hspace{\polycvhintcolsep}\polycv@headerfont%
    \parbox{1.0\linewidth-\polycvhintcol-\polycvhintcolsep}{#1}% 
  }\par\vspace{0.5\baselineskip}}
\renewcommand{\subsection}[1]{%
  \parbox[b]{1\linewidth}{%
    \color{polycvsectioncolor}%
    \hspace{\polycvhintcol}\hspace{\polycvhintcolsep}\polycv@headerfont%
    \parbox{1.0\linewidth-\polycvhintcol-\polycvhintcolsep}{#1}% 
  }\par\vspace{0.3\baselineskip}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsubsection{Header and Footer Boxes}
%
% \begin{macro}{\polycv@header}
% The header box will be used internally only. 
% It is a simple box produced with tikz, and uses the author and position variables.
% It is typeset in the primary color of the template.
%
%    \begin{macrocode}
\newcommand{\polycv@header}[3][\polycvheaderheight]{%
  \begin{tikzpicture}[remember picture,overlay]
    \node [rectangle, %
           fill           = polycvheaderbackground, %
           anchor         = north, %
           minimum width  = \paperwidth, %
           minimum height = #1%
          ] (headerbox) at (current page.north){};
    \node [anchor = mid] (cv-name) at (headerbox) {%
      \Huge\polycv@headerfont\color{polycvheadertext}\textbf{#2}%
    };
    \node [anchor = north] at (cv-name.south) {%
      \Large\polycv@headerfont\color{polycvheadertext} #3%
    };
  \end{tikzpicture}%
  \ignorespaces%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@footer}
% The footer box will be used internally only. 
% It is a simple box produced with tikz, which can be used to ddisplay page numbers.
% If the argument to the macro is empty, nothing will be printed, 
% otherwise dashes are used to surround the command.
% It is typeset in the primary color of the template.
%
%    \begin{macrocode}
\newcommand{\polycv@footer}[2][\polycvfooterheight]{%
  \begin{tikzpicture}[remember picture,overlay]
    \node [rectangle, %
           fill           = polycvheaderbackground, %
           anchor         = south, %
           minimum width  = \paperwidth, %
           minimum height = #1%
          ] (footerbox) at (current page.south){};
    \node [anchor = center] (pagenumber) at (footerbox) {%
      \polycv@headerfont\color{polycvheadertext}%
      \if\relax\detokenize{#2}\relax
      \else
      - #2 -
      \fi
    };
  \end{tikzpicture}%
  \ignorespaces%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@signature}
% The signature box will be used internally only. 
% It is a simple box produced with tikz, which wraps around an image defined earlier.
% It will also print the author name below the image.
% By default the box has the same background color as the page.
%
%    \begin{macrocode}
\newcommand{\polycv@signature}[2][\polycvsidebarwidth]{%
  \begin{tikzpicture}[remember picture, overlay]
    \node [rectangle, 
           anchor = south west, %
           text width = #1, %
           align = \polycv@signature@alignment, %
           minimum height = 0.75#1, %
           yshift = \polycvbottommargin, %
           xshift = \polycvmargins,
           fill = polycvsidebarbackground %DRAFT
          ] (polycvsignaturebox) at (current page.south west) {%
      \includegraphics[width=#1]{#2}\\
      \polycvauthor%
    };
  \end{tikzpicture}%
  \ignorespaces%
}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Level and Progress Bar}
%
% First a few simple filled and unfilled symbols are defined as tikz pictures.
% \begin{macro}{\polycv@square@nofill}
% \begin{macro}{\polycv@square@filled}
% Square symbols, the height and width are set to the height of the progressbar, 
% which is defined via the options.
%
%    \begin{macrocode}
\newcommand{\polycv@square@nofill}[1][\polycvprogressbarheight]{%
  \begin{tikzpicture}[x=#1, y=#1]%
    \filldraw[polycvprogressbarempty] (0,0) rectangle (1,1);% 
    \draw[polycvtextcolor, thick] (0,0) rectangle (1,1);% 
  \end{tikzpicture}}
\newcommand{\polycv@square@filled}[1][\polycvprogressbarheight]{%
  \begin{tikzpicture}[x=#1, y=#1]%
    \filldraw[polycvprogressbarfilled] (0,0) rectangle (1,1);% 
    \draw[polycvtextcolor, thick] (0,0) rectangle (1,1);% 
  \end{tikzpicture}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycv@circle@nofill}
% \begin{macro}{\polycv@circle@filled}
% Analogous circle symbols.
%    \begin{macrocode}
\newcommand{\polycv@circle@nofill}[1][\polycvprogressbarheight]{%
  \begin{tikzpicture}[x=#1, y=#1]%
    \filldraw[polycvprogressbarempty] (0.5,0.5) circle [radius=0.5];% 
    \draw[polycvtextcolor, thick] (0.5,0.5) circle [radius=0.5];% 
  \end{tikzpicture}}
\newcommand{\polycv@circle@filled}[1][\polycvprogressbarheight]{%
  \begin{tikzpicture}[x=#1, y=#1]%
    \filldraw[polycvprogressbarfilled] (0.5,0.5) circle [radius=0.5];% 
    \draw[polycvtextcolor, thick] (0.5,0.5) circle [radius=0.5];% 
  \end{tikzpicture}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycv@repeating}
% This is a helper function to repeat typesetting a symbol. 
% It will fill the spaces between the symbols.
%
%    \begin{macrocode}
\newcommand{\polycv@repeating}[2][5]{%
  \ifnum#1 > 0%
    \newcount\rep%
    \rep0%
    \loop\ifnum\rep < \number\numexpr#1-1\relax%
      #2\hfill%
      \advance\rep by 1% 
    \repeat%
    #2%
  \fi%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@level@bar}
% The level bar is also a helper function, which wraps around the repeating function.
% It sets its contents as a parbox with the width of the hint column (\#1 by default).
% It also needs a level to display (\#2), which is the number of filled elements (\#3).
% It the computes from the options of total units the number of unfilled elements(\#4)
% to typeset.
%
%    \begin{macrocode}
\newcommand{\polycv@level@bar}[4][\polycvhintcol]{%
  \newcount\total@units%
  \total@units\polycv@progressbarunits%
  \newcount\level%
  \ifnum#2 < \total@units \level#2 \else \level\total@units \fi%
  \newcount\elevel%
  \elevel\numexpr\total@units-\level\relax%
  \def\symbol@filled{#3}%
  \def\symbol@nofill{#4}%
  \parbox{#1}{%
    \ifnum\level = 0%
      \polycv@repeating[\total@units]{\symbol@nofill}%
    \else 
      \ifnum\level = \total@units%
        \polycv@repeating[\total@units]{\symbol@filled}%
      \else
        \polycv@repeating[\level]{\symbol@filled}%
        \hfill%
        \polycv@repeating[\elevel]{\symbol@nofill}%
      \fi%
    \fi%
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycvlevelssquared}
% \begin{macro}{\polycvlevelscircled}
% Wrapper commands as user interfaces to the level bar.
%
%    \begin{macrocode}
\newcommand{\polycvlevelssquared}[2][\polycvhintcol]{%
  \polycv@level@bar[#1]{#2}{\polycv@square@filled}{\polycv@square@nofill}%
}
\newcommand{\polycvlevelscircled}[2][\polycvhintcol]{%
  \polycv@level@bar[#1]{#2}{\polycv@circle@filled}{\polycv@circle@nofill}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycvprogressbar}
% The progressbar is a simple tikz image consiting of three rectangles:
% one denoting the level using the fill color, one using the empty color,
% and an empty box encompasing all as a frame.
%  
%    \begin{macrocode}
\newcommand{\polycvprogressbar}[2][\polycvhintcol]{
  \begin{tikzpicture}[x=#1, y=\polycvprogressbarheight]%
    \filldraw[polycvprogressbarfilled] (0, 0) rectangle (#2, 1) ;
    \filldraw[polycvprogressbarempty] (#2, 0) rectangle (1, 1);
    \draw[polycvtextcolor, thick] (0, 0) rectangle (1, 1) ;
  \end{tikzpicture}%
}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Commands for the main Body}
%
% \begin{macro}{\polycvline}
%  A generic command to typeset a line in the CV.
%  It consists of two parboxes, the left being the hint column, and the right the description.
%  One example usage is: \lstinline`\polycvline[width]{hint}{description}`.
%    \begin{macrocode}
\providecommand\polycvline{}
\renewcommand{\polycvline}[3][\polycvhintcol]{%
  \par%
  \parbox[t]{#1}{\strut\raggedleft #2}%
  \hspace{\polycvhintcolsep}%
  \parbox[t]{\linewidth-\polycvhintcolsep-#1}{\strut\polycv@entry@ragged #3}%
  \par\vspace{0.2\baselineskip}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycventry}
% The entry defines a block. It uses the command above, but fills in more details 
% in the description parbox of the template.
% An example usage is: \lstinline`\polycventry[width]{when}{what}{who}{where}{optional}{optional}`.
%    \begin{macrocode}
\providecommand\polycventry{}
\renewcommand{\polycventry}[7][\polycvhintcol]{%
  \polycvline[#1]{#2}{%
    \textbf{#3}, \textit{#4}, #5%
    \if\relax\detokenize{#6}\relax%
    \else%
    , #6%
    \fi%
    \if\relax\detokenize{#7}\relax%
    .%
    \else%
    .\newline\small #7%
    \fi%
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycvskill}
% This command uses a progressbar in the hint column.
%    \begin{macrocode}
\providecommand\polycvskill[2]{%
  \polycvline[\polycvhintcol]{\polycvprogressbar[0.5\linewidth]{#2}}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycvlanguage}
% This is basically a wrapper to the above command.
%    \begin{macrocode}
\providecommand\polycvlanguage[2]{%
  \polycvskill{#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{polycvfirstpage}
% This environment redefines the page layout for the first page, 
% and calls the header and footer templates.
%
%    \begin{macrocode}
\newenvironment{polycvfirstpage}{%
  \newgeometry{%
    left=\polycvleftmargin,
    top=\polycvtopmargin,
    right=\polycvmargins,
    bottom=\polycvbottommargin,
    nohead,nofoot}%
  \polycv@header{\polycvauthor}{\polycvposition}%
  \polycv@footer{}%
}{%
  \restoregeometry%
  \ignorespaces%
}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{polycvpage}
% This environment defines the page layout for a 'regular' page.
% It may cause problems, when the content is overflowing, 
% i.e. producing more than one page.
% Unfortunately, page handling has (still) to be done manually.
% It also calls the header and footer templates, but they are empty by default.
%    \begin{macrocode}
\newenvironment{polycvpage}{%
  \newgeometry{%
    top=\polycvtopmargin,%
    left=2\polycvmargins,%
    right=2\polycvmargins,%
    bottom=\polycvbottommargin,%
    nohead,nofoot}%
  \polycv@header{}{}%
  \polycv@footer{}%
}{%
  \restoregeometry%
  \ignorespaces%
}
%    \end{macrocode}
% \end{environment}
%
% \subsubsection{Side Bar Definitions}
%
% \begin{macro}{\polycv@sidebar@skill}
% This template is used in the sidebar.
% It consists of one parbox spanning the full width of the line,
% encapsulating two more parboxes to set the progressbar and the description.
%
%    \begin{macrocode}
\providecommand\polycv@sidebar@skill[3][\polycvhintcolsep]{%
  \parbox{1.0\linewidth}{%
    \hspace{#1}%
    \parbox[b]{2\linewidth/3-4#1}{#2}%
    \hspace{#1}%
    \parbox[b]{\linewidth/3}{%
      \flushright\polycvprogressbar[\linewidth]{#3}}%
    \par\vspace{0.2\baselineskip}}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{polycvsidebar}
% This environment provides a box as a tikz picture for the sidebar.
% It first saves the original definition of the section command, then redefines it for a better fit.
% It also redefines the skill and language commands for a better fit within the box.
% At the end, it restores the original definitions.
% If the option to sign the CV is active, another box will be inserted at the bottom off the paaage.
%
%    \begin{macrocode}
\newenvironment{polycvsidebar}{%
  \let\section\savesection%
  \newcommand{\section}[1]{%
  \parbox[b]{1\linewidth}{%
    \color{polycvsectioncolor}\large\polycv@headerfont{##1}% 
  }\par\vspace{0.5\baselineskip}}%
  \let\polycvlanguage\savepolycvlanguage%
  \newcommand{\polycvlanguage}[2]{\polycv@sidebar@skill{##1}{##2}}%
  \let\polycvskill\savepolycvskill%
  \newcommand{\polycvskill}[2]{\polycv@sidebar@skill{##1}{##2}}%
  \begin{tikzpicture}[remember picture, overlay]
    \node [anchor = north west, %
           text width = \polycvsidebarwidth, %
           xshift = \polycvmargins, %
           yshift = -\polycvheaderheight-\polycvmargins,
           fill = polycvsidebarbackground %DRAFT
          ] (polycvsidebarbox) at (current page.north west) \bgroup
}{%
    \egroup;%
  \end{tikzpicture}%
  \let\savesection\section%
  \let\savepolycvlanguage\polycvlanguage%
  \let\savepolycvlanguage\polycvskill%
  \ifpolycv@signcv%
    \ClassInfo{polycv}{Option 'signcv' enabled; CV will be signed.}
    \polycv@signature{\polycvsignatureimage}%
  \fi%
  \ignorespaces%
}
%    \end{macrocode}
% \end{environment}
%
% \subsection{Cover Letter Definitions}
%
% In this section the commands for the letter template are set up.
%
% \begin{macro}{\polycv@letter@from}
% The header box is now substituted to include the address. 
% The colourscheme is also adjusted to make the box lesss bulky.
% Therefore the usual background colour and the text color will be used.
%    \begin{macrocode}
\newcommand{\polycv@letter@from}[3][\polycvheaderheight]{%
  \begin{tikzpicture}[remember picture, overlay]%
    \node [rectangle, %
           fill           = polycvheadertext, %
           anchor         = north, %
           minimum width  = \paperwidth, %
           minimum height = #1-1ex%
          ] (headerbox) at (current page.north){};
    \node [rectangle, %
           fill           = polycvheaderbackground, %
           anchor         = north, %
           minimum width  = \paperwidth, %
           minimum height = 1ex%
          ] (headerline) at (headerbox.south){};
    \node [anchor = east, %
           text width = 5cm, %
           xshift     = -2\polycvmargins
          ] (polycv-letter-address) at (headerbox.east) {%
      \polycv@headerfont\color{polycvheaderbackground}\parbox[t]{1.0\linewidth}{%
        \raggedleft%
        \textbf{\Large #2}\\%
        \textit{\normalsize #3}%%
        }%
    };%
  \end{tikzpicture}%
  \ignorespaces%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@letter@to}
% This defines the field of the addressee.
%
%    \begin{macrocode}
\newcommand{\polycv@letter@to}[1]{%
  \noindent\parbox[t][4cm][c]{0.4\linewidth}{\raggedright#1}\par%
  \vspace{1\baselineskip}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@letter@date}
% This defines and formates the date field.
%
%    \begin{macrocode}
\newcommand{\polycv@letter@date}{%
  \noindent\parbox[t]{1.00\linewidth}{\raggedleft\today}\par%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@letter@subject}
% This defines and formates the subject field.
%
%    \begin{macrocode}
\newcommand{\polycv@letter@subject}[1]{%
  \noindent\parbox[t]{1.00\linewidth}{\raggedright\textbf{#1}}\par%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\opening}
% \begin{macro}{\closing}
% This defines and formates the opening and closing remarks
%
%    \begin{macrocode}
\providecommand\opening{}
\renewcommand{\opening}[1]{\noindent{}#1\par}
\providecommand\closing{}
\renewcommand{\closing}[1]{\noindent{}#1\par}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\polycv@letter@psmark}
% Define the default postscript mark.
%
%    \begin{macrocode}
\newcommand{\polycv@letter@psmark}{P.S.~}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setpsmark}
% Command to change the default postscript mark.
%    \begin{macrocode}
\providecommand\setpsmark{}
\renewcommand*{\setpsmark}[1]{\renewcommand{\polycv@letter@psmark}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\polycv@letter@ps}
% \begin{macro}{\ps}
% Variable to store the content of the postscript remark and command to set it.
%    \begin{macrocode}
\providecommand\polycv@letter@ps{}%
\providecommand\ps{}
\renewcommand{\ps}[1]{%
  \renewcommand{\polycv@letter@ps}{%
    \noindent\footnotesize\polycv@letter@psmark#1\par%
  }%
}%
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{environment}{polycvletter}
% Here the actual letter environment is defined. 
% Like before, this is intended to be only one page and hence may cause problems for sufficiently long letters.
% The environment requires two parameters, the recipient address, and the body.
% First the page setup is changed, then the templates for header, recipient address, subject, and footer are called.
% The indentation is set to the specified value.
% At the end, the signature will be inserted, and below that - if present - the postscript remark.
%
%    \begin{macrocode}
\newenvironment{polycvletter}[3][\polycvaddress]{%
  \newgeometry{%
    top=\polycvtopmargin,%
    left=2\polycvmargins,%
    right=2\polycvmargins,%
    bottom=\polycvbottommargin,%
    nohead,nofoot}%
  \polycv@letter@from{\polycvauthor}{#1}%
  \polycv@letter@to{#3}%
  \polycv@letter@date%
  \polycv@letter@subject{#2}%
  \setlength{\parindent}{\polycvletterindent}%
}{%
  \vspace{0.5\baselineskip}%
  \noindent\includegraphics[width=5cm]{\polycvsignatureimage}\\%
  \noindent\polycvauthor\par%
  \if\relax\detokenize{\polycv@letter@ps}\relax%
  \else%
  \polycv@letter@ps\par%
  \fi%
  \polycv@footer{}%
  \restoregeometry%
}
%    \end{macrocode}
% \end{environment}
%
% \subsection{Appendix}
%
% \begin{macro}{\polycvappendix}
% The appendix command is an interface to include (parts of) a pdf, e.g. for certificates or recommendations.
% The page colour is first reset to having none, otherwise it would overlay on top off the included pdf.
% By default all pages will be included, but this can be overwritten to  specific range (and other options).
% The command can be used multiple times.
%
%    \begin{macrocode}
\providecommand*\polycvappendix{}
\renewcommand*{\polycvappendix}[2][pages={1-}]{%
  \nopagecolor%
  \includepdf[#1]{#2}}%
%    \end{macrocode}
% \end{macro}
%
% That is it.
%
% \Finale
\endinput
